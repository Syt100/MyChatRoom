<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserInfoDao">
    <select id="selectAllUserInfo" resultType="domain.UserInfo">
        select *
        from user_info
    </select>

    <!-- 传入一个参数 -->
    <select id="selectUserInfoByUserId" parameterType="java.lang.Integer" resultType="domain.UserInfo">
        select *
        from user_info
        where user_id = #{id}
    </select>

    <!-- 传入多个基本类型，使用@Param命名参数 -->
    <select id="selectUserInfoByUserIdPassword" resultType="domain.UserInfo">
        select *
        from user_info
        where user_id = #{userId}
          and user_password = #{userPass}
    </select>

    <insert id="insertUserInfo">
        insert into user_info
        values (null, #{user_id}, #{user_name}, #{user_password}, #{user_signature})
    </insert>

    <delete id="deleteUserInfo">
        delete
        from user_info
        where user_id = #{userId}
    </delete>
</mapper>
        <!-- SQL映射文件：写SQL语句，mybatis会执行这些SQL
            1. 指定约束文件
                <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
            mybatis-3-mapper.dtd是约束文件的名称，扩展名是dtd

            2. 约束文件的作用：限制，检查在当前文件中出现的标签，属性必须符合mybatis的要求。
            3. mapper是当前文件的根标签，必须。
                namespace：叫做命名空间，唯一值，可以是自定义的字符串。要求使用dao接口的全限定名称。
            4. 在当前文件中，可以使用特定标签，表示数据库的特定操作。
                <select>表示执行查询
                    select：表示查询操作；
                    id：执行的SQL语句的唯一标识，mybatis会使用这个id的值来找到要执行的SQL语句。
                        可以自定义，要求使用接口中的方法名称。
                    resultType：表示SQL语句执行后结果类型，SQL执行后得到的ResultSet，遍历这个ResultSet得到java对象的类型。
                <update>表示更新数据库的操作，就是在<update>标签中写的是update SQL语句
                <insert>表示插入，insert语句
                <delete>表示删除，delete语句
        -->